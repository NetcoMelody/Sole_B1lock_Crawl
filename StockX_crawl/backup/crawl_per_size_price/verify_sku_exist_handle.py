import pandas
import browser_product
import random
import time

def main():
    skus = "DZ4137-700,FV5104-004,AH7860-160,IE0872,384664-060,HF4524-111,WS327KB,FZ7974-300,ID0478,FV5029-141,CN0149-001,FQ2941-200,AQ9129-170,FV0389-100,IF1857,DV3770-400,FZ8319-300,HF4334-300,DJ5625-601,HF0731-007,DM0826-103,FN8882-001,DD1503-103,DR8887-100,CT1973-101,FX4981,FN0344-001,ID1008,378038-170,UXC72DA1,DJ6013-604,FQ7928-001,FQ3389-600,FN7366-400,FQ8138-103,CT8529-164,CW6769-930,FZ1347-100,CV4611-100,DJ5982-041,DJ9432-601,VN000D1FCRM,HF6245-400,CW2458-003,EF4965,ID2054,BQ6472-186,BZ0579,FZ0549-600,FQ1759-006,HF9990-100,CT8532-102,U9060GRY,DH4402-101,DC8994-101,FQ8213-103,UXC72RH,MFCXLB4,HF4334-004,CZ8455-100,U9060IB,DM0774-111,BB480LEC,FQ8138-001,DN4200-064,AO7541-006,FN5775-001,FZ9033-001,FB9933-100,FN5212-001,DM7866-200,AT0057-200,DD9315-104,CJ1671-100,FQ3389-301,FJ1567-501,DD9336-103,414571-170,FD6819-300,HM3706-141,DQ4365-114,HJ4285-777,FV3964-601,FJ1214-400,1201A019-006,DV1238-103,ID4132,HQ6448,FV5029-006,IF1860,ID0444,FD2631-600,IF1859,FZ5048-100,HF4281-141,BD7633,DR5415-103,553558-414,FQ0214-106,FZ3963-010,DJ6563-038,G27639,414571-140,553558-481,DD0587-110,DV3950-101,IE3425,CW1590-103,HF5702-170,BB5350-2023,BQ6817-401,FZ3775-133,DV0788-002,ID0780,DZ2545-600,CT8019-034,IE0429,DV0829-500,DZ9787-155,580528-006,DZ5368-201,553558-030,DV1237-001,378037-061,II0001,CV8122-102,BQ4153-100,UXC72EC,FD4616-161,CI1209-101,HF4292-100,HF1052-010,AO7890-101,CV3043-100,DJ7926-001,HJ4303-400,CW5992-102,FZ5049-222,FV4080-600,HF6367-001,HQ8707,FD4653-300,DC9039-501,M2002RDA,U9060PB,378038-061,H03477,G27706,FQ8138-002,ID1447,WS327KA,DV5141-100,ID0477,IE3439,505835-140,U9060OUT,DH8229-101,FQ1759-104,VN000D1FBKF,M2002RDJ,HF1877-001,M2002RDB,FZ1517-002,HJ4320-001,M1000MA,HJ6630-900,DV2629-131,CV0785-158,ID2350,FQ6868-111,HM3696-661,FZ9902-001,U9060ZGB,IG6648,DN3707-010,HF1567-200,DD9682-103,1201A789-103,IE8409,HQ1181-661,414571-171,FD8414-900,DC0774-021,CT8012-104,553558-152,DM7866-202,FZ1291-600,DB3970-100,DV2918-004,HQ3497-100,CZ0790-001,IB4481-500,JS0644,553558-060,JZ9927,JZ9944,FV5582-001,FQ4303-400,FQ8213-002,IH0070,AO7890-400,JR1094,BQ6931-007,DJ9432-500,BV1803-106,AQ2664-063,JR0861,HQ2993-100,IB8874-111,JS0646,HM9621-900,FN8454-001,HV8453-100,IB8967-004,HV8563-600,HQ2592-002,HF5182-600,AQ9129-501,FV1288-800,BQ3378-100,U9060HSC,FQ3389-103,FD1317-007,HF5753-221,AO9944-441,FB9928-200,FV5029-100,FV5104-006,HJ6014-400,DQ5080-001,DC3638-500,FQ8213-006,FV3623-151,DD1869-107,IG6668,FB9927-200,CZ8065-600,ID2056,DQ8423-301,HF5758-151,FQ0214-001,U9060RE,FD2627-200,U9060MAC,DH8229-001,HM3753-600,HQ4540,DX2454-106,FQ7939-103,FN3727-100,FQ8180-400,HV6674-067,CI1209-107,1203A275-103,DX4379-400,553558-146,555088-134,DH5131-101,DH4401-103,CZ0790-110,DA7995-100,DD9315-113,DJ5982-060,CP9652-2020,DM3413-100,ID2388,555112-401,DD5077-107,CI4509-100,1201A789-250,GY6783,FN5032-200,M1000MC,HF5352-500,FN0344-901,IH0587-700,FQ1180-001,FQ1759-400,FB8947-001,HF3087-103,FZ1233-002,CZ8065-100,FN5032-600,1201A019-200,DV2918-401,FQ3246-300,FZ4811-001,JS1182,HP9825,WS327LG,DR5415-100,DJ2756-100,FQ1854-001,HQ2592-004,FD8778-001,DM0858-467,HJ0513-500,DZ2794-102,CV9548-100,HQ7978-100,JP8040,JQ4003,HV0823-100,IB7667-001,U9060WOR,JR6390,JR0577,FW3198,DZ3355-100,U991SG2,GX6144,643485 17L10 1060,DJ9432-001,M1906RA,HF6414-600,EF0901,IB7328-002,DD9315-115,CP9654-2023,JR6392,HQ3073-100,HF3058-300,JR3587,U1906LOC,DB4612-100,HV6922-100,IH1401-400,414571-122,DZ5485-008,IH4383-300,HM9932-100,FZ8117-102,IH3641,U204LMMA,IE0430,406334-07,FV5029-003,M992NC,FZ1098-100,IH3282,FQ4296-101,FQ3546-100,JR6363,CD7069-141,JR6364,JR6372,HV5977-102,HV5979-130,HQ2331-400,HV0823-003,IO2038-001,ID0805,FV7276-401,JR3915,JQ2393,CZ0220-133,FN7509-029,HJ6779-104,BQ6817-006,DH4401-101,408452-017,1202A164-116,IG6669,IE2694,1203A280-002,IB8958-001,684915-401,HM9932-400,HF2794-100,DV0982-006,HF4340-800,IB1519-200,DV4982-004,FV5029-200,DH6927-161,FQ8181-511,U9060ESD,DN3686-061,DH6932-100,IO3372-700,DA9053-101,II7404-400,HM9932-600,JR8830,IM6687-262,IB9561-900"
    sku_list = skus.split(",")
    now_sku_list = []
    now_exist_sku_df = pandas.read_csv("exist_sku.csv")
    now_exist_sku_list = now_exist_sku_df["sku"].tolist()
    # 转为集合进行差集运算
    new_skus = list(set(sku_list) - set(now_exist_sku_list))
    exist_sku_list = []
    x = 0
    y = 1
    for sku in new_skus:
        factor = random.uniform(x,y)
        time.sleep(random.uniform(5+factor,30+factor))
        product_id = browser_product.main(sku)
        if product_id is None:
            continue
        time.sleep(random.uniform(3+factor,30+factor))
        flag = detial_product_with_nodeID.main(product_id,sku)
        if flag:
            exist_sku_list.append(sku)
        data = {
            "sku":exist_sku_list
        }
        pandas.DataFrame(data).to_csv("exist_sku.csv",index=False)
        x+=1
        y*=2

if __name__ == '__main__':
    main()